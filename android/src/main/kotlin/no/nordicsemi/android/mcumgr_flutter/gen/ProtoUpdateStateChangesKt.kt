//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: lib/proto/flutter_mcu.proto

@kotlin.jvm.JvmName("-initializeprotoUpdateStateChanges")
inline fun protoUpdateStateChanges(block: ProtoUpdateStateChangesKt.Dsl.() -> kotlin.Unit): FlutterMcu.ProtoUpdateStateChanges =
  ProtoUpdateStateChangesKt.Dsl._create(FlutterMcu.ProtoUpdateStateChanges.newBuilder()).apply { block() }._build()
object ProtoUpdateStateChangesKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: FlutterMcu.ProtoUpdateStateChanges.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: FlutterMcu.ProtoUpdateStateChanges.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): FlutterMcu.ProtoUpdateStateChanges = _builder.build()

    /**
     * <code>.ProtoUpdateStateChanges.FirmwareUpgradeState oldState = 1;</code>
     */
    var oldState: FlutterMcu.ProtoUpdateStateChanges.FirmwareUpgradeState
      @JvmName("getOldState")
      get() = _builder.getOldState()
      @JvmName("setOldState")
      set(value) {
        _builder.setOldState(value)
      }
    /**
     * <code>.ProtoUpdateStateChanges.FirmwareUpgradeState oldState = 1;</code>
     */
    fun clearOldState() {
      _builder.clearOldState()
    }

    /**
     * <code>.ProtoUpdateStateChanges.FirmwareUpgradeState newState = 2;</code>
     */
    var newState: FlutterMcu.ProtoUpdateStateChanges.FirmwareUpgradeState
      @JvmName("getNewState")
      get() = _builder.getNewState()
      @JvmName("setNewState")
      set(value) {
        _builder.setNewState(value)
      }
    /**
     * <code>.ProtoUpdateStateChanges.FirmwareUpgradeState newState = 2;</code>
     */
    fun clearNewState() {
      _builder.clearNewState()
    }

    /**
     * <code>bool canceled = 3;</code>
     */
    var canceled: kotlin.Boolean
      @JvmName("getCanceled")
      get() = _builder.getCanceled()
      @JvmName("setCanceled")
      set(value) {
        _builder.setCanceled(value)
      }
    /**
     * <code>bool canceled = 3;</code>
     */
    fun clearCanceled() {
      _builder.clearCanceled()
    }
  }
}
inline fun FlutterMcu.ProtoUpdateStateChanges.copy(block: ProtoUpdateStateChangesKt.Dsl.() -> kotlin.Unit): FlutterMcu.ProtoUpdateStateChanges =
  ProtoUpdateStateChangesKt.Dsl._create(this.toBuilder()).apply { block() }._build()

