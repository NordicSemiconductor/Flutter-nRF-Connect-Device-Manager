//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: lib/proto/flutter_mcu.proto

package no.nordicsemi.android.mcumgr_flutter.gen;

@kotlin.jvm.JvmSynthetic
public inline fun protoUpdateStateChanges(block: no.nordicsemi.android.mcumgr_flutter.gen.ProtoUpdateStateChangesKt.Dsl.() -> kotlin.Unit): no.nordicsemi.android.mcumgr_flutter.gen.FlutterMcu.ProtoUpdateStateChanges =
  no.nordicsemi.android.mcumgr_flutter.gen.ProtoUpdateStateChangesKt.Dsl._create(no.nordicsemi.android.mcumgr_flutter.gen.FlutterMcu.ProtoUpdateStateChanges.newBuilder()).apply { block() }._build()
public object ProtoUpdateStateChangesKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: no.nordicsemi.android.mcumgr_flutter.gen.FlutterMcu.ProtoUpdateStateChanges.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: no.nordicsemi.android.mcumgr_flutter.gen.FlutterMcu.ProtoUpdateStateChanges.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): no.nordicsemi.android.mcumgr_flutter.gen.FlutterMcu.ProtoUpdateStateChanges = _builder.build()

    /**
     * <code>.no.nordicsemi.android.mcumgr_flutter.gen.ProtoUpdateStateChanges.FirmwareUpgradeState oldState = 1;</code>
     */
    public var oldState: no.nordicsemi.android.mcumgr_flutter.gen.FlutterMcu.ProtoUpdateStateChanges.FirmwareUpgradeState
      @JvmName("getOldState")
      get() = _builder.getOldState()
      @JvmName("setOldState")
      set(value) {
        _builder.setOldState(value)
      }
    /**
     * <code>.no.nordicsemi.android.mcumgr_flutter.gen.ProtoUpdateStateChanges.FirmwareUpgradeState oldState = 1;</code>
     */
    public fun clearOldState() {
      _builder.clearOldState()
    }

    /**
     * <code>.no.nordicsemi.android.mcumgr_flutter.gen.ProtoUpdateStateChanges.FirmwareUpgradeState newState = 2;</code>
     */
    public var newState: no.nordicsemi.android.mcumgr_flutter.gen.FlutterMcu.ProtoUpdateStateChanges.FirmwareUpgradeState
      @JvmName("getNewState")
      get() = _builder.getNewState()
      @JvmName("setNewState")
      set(value) {
        _builder.setNewState(value)
      }
    /**
     * <code>.no.nordicsemi.android.mcumgr_flutter.gen.ProtoUpdateStateChanges.FirmwareUpgradeState newState = 2;</code>
     */
    public fun clearNewState() {
      _builder.clearNewState()
    }

    /**
     * <code>bool canceled = 3;</code>
     */
    public var canceled: kotlin.Boolean
      @JvmName("getCanceled")
      get() = _builder.getCanceled()
      @JvmName("setCanceled")
      set(value) {
        _builder.setCanceled(value)
      }
    /**
     * <code>bool canceled = 3;</code>
     */
    public fun clearCanceled() {
      _builder.clearCanceled()
    }
  }
}
public inline fun no.nordicsemi.android.mcumgr_flutter.gen.FlutterMcu.ProtoUpdateStateChanges.copy(block: no.nordicsemi.android.mcumgr_flutter.gen.ProtoUpdateStateChangesKt.Dsl.() -> kotlin.Unit): no.nordicsemi.android.mcumgr_flutter.gen.FlutterMcu.ProtoUpdateStateChanges =
  no.nordicsemi.android.mcumgr_flutter.gen.ProtoUpdateStateChangesKt.Dsl._create(this.toBuilder()).apply { block() }._build()
